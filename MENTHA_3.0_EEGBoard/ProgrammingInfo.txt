FIRMWARE LOCATION: MINT_EEGAcquisitionSystem/MINT_EEGFirmware/MINT_EEG_Firmware.X/


TOOLS USED:
1.MPLAB X IDE
2.MPLAB XC32 compiler
3.legacy peripheral libraries (V1.42)
4.PICKit3


INSTALLATION PROCESS:
1. Download MPLAB X IDE, MPLABX IPE, and the XC32 compiler (not sure if the compiler is necissary as we want to use an older version anyway that I think comes with the IDE). 

2. Seperately download the legacy peripheral libraries and place them in the V1.42 folder (wherever that is saved in your computer). 

3. Open the project in MPLAB X IDE and try a clean and build of the base project.


TO DO (Unfinished for project):
-Embed device's configuration bits into code.
-Add interrupt vectors to interrupt.c (if interrupts are to be used).
-Define system parameters (such as operating frequency) to system.h.
-Add user level functions to user.h and user.c (initialize I/O, user peripherals like the ADS1299, computations, ect.)
-Add code to main.c (initialization and main loop).
-Document code in project_information.txt.
-Test on actual hardware (Board unfinished due to COVID-19 issues)


THE FOLLOWING ARE RESOURCES THAT MAY ASSIST IN PROGRAMMING THE PIC32MX450F256H:
Found some sample code we can use to implement SPI on the PIC32MX470: 
https://www.microchip.com/forums/m929006.aspx, 
http://hades.mech.northwestern.edu/index.php/PIC32MX:_SPI_Communication_between_PIC32s

and section 10.1.2 in this datasheet: 
https://www.ti.com/lit/ds/symlink/ads1299.pdf sets up the ADS1299 for basic functions

An examples project shows code to write in MPLab for the PIC: 
https://www.elprocus.com/pic-microcontroller-programming-using-c-language/

Setting up PIC programmer example:
https://www.canakit.com/Media/Manuals/UK1300.pdf

Code examples for the PIC Xpress board!!
https://mplabxpress.microchip.com/mplabcloud/example
